name: ci

permissions:
    pull-requests: write
    issues: write
    repository-projects: write
    contents: write

on:
    pull_request:
    push:
        branches: [main]

jobs:
    tests:
        runs-on: ubuntu-latest
        name: tests
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v4
              with:
                python-version: '3.10'
                cache: 'pip'
            - run: pip install -r requirements.txt
            - run: mypy .
              name: mypy tests
              working-directory: ./baryon
            - run: python manage.py test --settings=baryon.settings.test
              working-directory: ./baryon
              if: success() || failure()
            - name: Publish mypy test report
              uses: mikepenz/action-junit-report@v4
              if: success() || failure()
              with:
                report_paths: './baryon/.mypy.xml'
            - name: Publish unit test report
              uses: mikepenz/action-junit-report@v4
              if: success() || failure()
              with:
                report_paths: './baryon/.unit-tests.xml'

    pre-commit:
        runs-on: ubuntu-latest
        name: pre-commit
        steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v4
        - uses: pre-commit/action@v3.0.0

    test_scraping:
        runs-on: ubuntu-latest
        name: test_scraping
        steps:
            - uses: actions/checkout@v4
            - name: Cache Docker images.
              uses: ScribeMD/docker-cache@0.3.7
              with:
                key: docker-${{ runner.os }}-${{ hashFiles('Dockerfile') }}
            - run: docker build -t baryon .
            - run: docker run --env DJANGO_SETTINGS_MODULE=baryon.settings.dev baryon /bin/bash -c "python manage.py migrate && python manage.py scrape_quarks"

    deploy:
        if: success() && github.ref == 'refs/heads/main' # only deploy main
        needs: ["tests", "pre-commit", "test_scraping"]
        name: Deploy dev
        runs-on: ubuntu-latest
        concurrency: "deployment"
        steps:
            - name: Deploy environment
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.HOST }}
                username: ${{ secrets.USER }}
                key: ${{ secrets.KEY }}
                script: |
                    cd baryon
                    docker compose down
                    git reset --hard
                    git pull origin main
                    make deploy-prod
